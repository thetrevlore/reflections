When would you want to use a remote repository rather than keeping all your work local?

To collaborate with others!


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

So that you know what changes are happening when. Sometimes you'll be working on a branch and need the base master file to stay the same while you work on the new branch. 


Describe the differences between forks, clones, and branches. When would you use one instead of another?

- Forks create a new repository in your own GitHub. Which includes all of the commits in that original repositories. You are basically creating a new version, that's based on the repository you forked.
- Clones... this copies a repository from GitHub to your local branch.
- Branches you would use when you are a collaborator and therefore have permission to make changes to a repository. You can branch off to add a new feature that you hope to be a part of the master branch or included in the official production code.


What is the benefit of having a copy of the last known state of the remote stored locally?

So that you can compare it to changes you've made. So that you know it's not going to change while you're working on it locally.


How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

So many things would be harder. everything would be 10 times more complicated and take 10 times longer.


When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When you want to work on a new feature or anytime you don't want to have your new code be directly applied to the master. When collaborating it's key, so that your base code isn't constantly changing.
making changes directly to master, involves fewer steps. So it can be more efficient.